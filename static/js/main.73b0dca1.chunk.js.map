{"version":3,"sources":["components/card/index.js","components/search-box/index.js","components/card-list/index.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","name","src","id","email","SearchBox","placeholder","handleChange","type","onChange","CardList","useState","monsters","setMonsters","searchField","setSearchField","useEffect","a","fetch","json","response","fetchData","filteredMonsters","filter","toLowerCase","includes","e","target","value","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAaeA,MAVf,SAAcC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAKF,EAAMG,QAAQC,KAAMC,IAAG,+BAA0BL,EAAMG,QAAQG,GAAxC,eACjC,6BAAKN,EAAMG,QAAQC,OACnB,4BAAIJ,EAAMG,QAAQI,Y,MCCTC,MANf,YAAoD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aACjC,OACE,uBAAOT,UAAU,SAASU,KAAK,SAASF,YAAcA,EAAcG,SAAWF,K,MCmCpEG,MAlCf,WAAqB,IAAD,EACcC,mBAAS,IADvB,mBACXC,EADW,KACDC,EADC,OAEoBF,mBAAS,IAF7B,mBAEXG,EAFW,KAEEC,EAFF,KAIlBC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACgCC,MAAM,8CADtC,8BACqFC,OADrF,OACQC,EADR,OAEEP,EAAYO,GAFd,4CADc,uBAAC,WAAD,wBAMdC,KAEC,IAMH,IAAMC,EAAmBV,EAASW,QAAQ,SAAAvB,GAAO,OAAIA,EAAQC,KAAKuB,cAAcC,SAASX,EAAYU,kBAErG,OACE,qCACA,kDACE,cAAC,EAAD,CAAWlB,YAAY,kBAAkBC,aAT7C,SAAsBmB,GACpBX,EAAeW,EAAEC,OAAOC,UAStB,qBAAK9B,UAAU,YAAf,SACKwB,EAAiBO,KAAI,SAAA7B,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,aCvBhB2B,MANf,WACE,OACE,cAAC,EAAD,CAAU7B,KAAK,YCOJ8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.73b0dca1.chunk.js","sourcesContent":["import React from 'react';\nimport './styles.css';\n\nfunction Card(props){\n  return (\n    <div className=\"card-container\">\n      <img alt={props.monster.name} src={`https://robohash.org/${props.monster.id}?set=set2`} />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport './styles.css';\n\nfunction SearchBox( { placeholder, handleChange } ){\n  return (\n    <input className=\"search\" type=\"search\" placeholder={ placeholder } onChange={ handleChange }/>\n  )\n}\n\nexport default SearchBox;","import React, { useState, useEffect } from 'react';\nimport Card from '../card';\nimport SearchBox from '../search-box';\nimport './styles.css';\n\n\nfunction CardList() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState('');\n  \n  useEffect(() => {\n    async function fetchData(){\n      const response = await (await fetch('https://jsonplaceholder.typicode.com/users')).json();\n      setMonsters(response);\n    }\n\n    fetchData();\n    \n  }, []);\n\n  function handleChange(e){\n    setSearchField(e.target.value);\n  }\n\n  const filteredMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n  return (\n    <>\n    <h1>Monsters Rolodex</h1>\n      <SearchBox placeholder=\"search monsters\" handleChange={ handleChange }/>\n      <div className=\"card-list\">\n          {filteredMonsters.map(monster => (\n            <Card key={monster.id} monster={monster} />\n          ))}\n\n      </div>\n    </>\n  )\n}\n\nexport default CardList;","import './App.css';\nimport CardList from './components/card-list';\n\nfunction App() {\n  return (\n    <CardList name=\"Rebeca\"/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}